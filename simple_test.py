#!/usr/bin/env python
"""
–ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ Redis –∏ Django Channels
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append('.')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'matchmaker.settings')
django.setup()

def check_redis():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
    
    try:
        import redis
        r = redis.Redis(host='127.0.0.1', port=6379, db=0)
        r.ping()
        print("‚úÖ Redis –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø–∏—Å—å/—á—Ç–µ–Ω–∏–µ
        r.set('test_key', 'test_value')
        value = r.get('test_key')
        if value == b'test_value':
            print("‚úÖ Redis –∑–∞–ø–∏—Å—å/—á—Ç–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        r.delete('test_key')
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Redis: {e}")
        return False

def check_channels():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Channels"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Channels...")
    
    try:
        from django.conf import settings
        backend = settings.CHANNEL_LAYERS['default']['BACKEND']
        print(f"Backend: {backend}")
        
        if 'redis' in backend.lower():
            print("‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω Redis backend –¥–ª—è Channels")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º channel layer
            import channels.layers
            channel_layer = channels.layers.get_channel_layer()
            print(f"Channel layer: {type(channel_layer).__name__}")
            
            return True
        else:
            print("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è InMemory backend")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        return False

def check_server():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å Django —Å–µ—Ä–≤–µ—Ä–∞"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Django —Å–µ—Ä–≤–µ—Ä–∞...")
    
    try:
        import requests
        response = requests.get('http://127.0.0.1:8000', timeout=3)
        if response.status_code == 200:
            print("‚úÖ Django —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            return True
    except:
        pass
    
    # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ —Å–æ–∫–µ—Ç
    import socket
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(1)
        result = sock.connect_ex(('127.0.0.1', 8000))
        sock.close()
        
        if result == 0:
            print("‚úÖ Django —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 8000!")
            return True
        else:
            print("‚ùå Django —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 8000")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ WebSocket —á–∞—Ç–∞ MatchMaker")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    redis_ok = check_redis()
    channels_ok = check_channels()
    server_ok = check_server()
    
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:")
    print(f"  Redis: {'‚úÖ OK' if redis_ok else '‚ùå –ü—Ä–æ–±–ª–µ–º–∞'}")
    print(f"  Channels: {'‚úÖ OK' if channels_ok else '‚ùå –ü—Ä–æ–±–ª–µ–º–∞'}")  
    print(f"  Django —Å–µ—Ä–≤–µ—Ä: {'‚úÖ OK' if server_ok else '‚ùå –ü—Ä–æ–±–ª–µ–º–∞'}")
    
    if redis_ok and channels_ok and server_ok:
        print("\nüéâ –í–°–ï –†–ê–ë–û–¢–ê–ï–¢! WebSocket —á–∞—Ç –≥–æ—Ç–æ–≤!")
        print("üü¢ –û–∂–∏–¥–∞–π—Ç–µ —Å—Ç–∞—Ç—É—Å '–û–Ω–ª–∞–π–Ω' –≤ —á–∞—Ç–µ")
    elif server_ok:
        print("\n‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å WebSocket")
        print("üü° –ß–∞—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ HTTP —Ä–µ–∂–∏–º–µ")
    else:
        print("\n‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–µ—Ä–æ–º")
    
    print("\nüì± –û—Ç–∫—Ä–æ–π—Ç–µ —á–∞—Ç: http://127.0.0.1:8000")
    print("üë§ –í–æ–π–¥–∏—Ç–µ —Å: test / 123456")
    print("üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ —á–∞—Ç–∞")
